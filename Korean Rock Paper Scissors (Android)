package com.example.harry.kawibawibo;

import android.content.Context;
import android.content.SharedPreferences;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    private Button rock;
    private Button scissors;
    private Button paper;
    private ImageView image;
    private TextView scoreText;
    private TextView highScoreText;
    private int newScore = 0;
    private int oldHighScore = 0;
    private boolean canClick = true;
    private final Handler handler = new Handler();

    private static final String myPrefsKey = "myPrefsKey";
    private static final String key = "key";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        image = (ImageView) findViewById(R.id.imageView);
        rock = (Button) findViewById(R.id.btnrock);
        scissors = (Button) findViewById(R.id.btnscissor);
        paper = (Button) findViewById(R.id.btnpaper);
        scoreText = (TextView) findViewById(R.id.scoreText);
        highScoreText = (TextView) findViewById(R.id.highScoreText);

        final SharedPreferences prefs = this.getSharedPreferences(myPrefsKey, Context.MODE_PRIVATE);
        oldHighScore = prefs.getInt(key, 0);


        scoreText.setText("Win Streak: 0");
        highScoreText.setText("High Score: 0");


        //final MediaPlayer mp1 = MediaPlayer.create(this, raw.sound1);
        //final MediaPlayer mp2 = MediaPlayer.create(this, raw.sound2);
        //final MediaPlayer mp3 = MediaPlayer.create(this, raw.sound3);
        final MediaPlayer win = MediaPlayer.create(this, R.raw.sound4);
        final MediaPlayer lose = MediaPlayer.create(this, R.raw.sound5);
        final MediaPlayer draw = MediaPlayer.create(this, R.raw.sound6);

        rock.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //      mp1.start();
                double computerChoice = Math.random();
                if (canClick) {
                    if (computerChoice < 0.34) {
                        draw.start();
                        Toast.makeText(MainActivity.this, "무승부 - It was a draw!\nThe Computer chose Rock!", Toast.LENGTH_SHORT).
                                show();
                        canClick = false;
                        stopInput();
                    } else if (computerChoice <= 0.67) {
                        win.start();
                        Toast.makeText(MainActivity.this, "승리 - Victory!\nThe Computer chose Scissors!", Toast.LENGTH_SHORT).show();
                        newScore++;
                        String total = Integer.toString(newScore);
                        scoreText.setText("Win Streak: " + total);
                        canClick = false;
                        stopInput();

                    } else {
                        lose.start();
                        Toast.makeText(MainActivity.this, "패배 - Defeat!\nThe Computer chose Paper!", Toast.LENGTH_SHORT).show();
                        newScore = 0;
                        String total = Integer.toString(newScore);
                        scoreText.setText("Win Streak: " + total);
                        canClick = false;
                        stopInput();
                    }

                    if (newScore > oldHighScore) {
                        SharedPreferences.Editor edit = prefs.edit();
                        edit.putInt("key", newScore);
                        edit.commit();
                        oldHighScore = prefs.getInt(key, 0);
                        String highScoreTotal = Integer.toString(oldHighScore);
                        highScoreText.setText("HIGH SCORE: " + highScoreTotal);
                    }

                } else {
                    stopInput();
                }
            }
        });

    scissors.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            //mp2.start();
            double computerChoice = Math.random();
            if (canClick) {
                if (computerChoice < 0.34) {
                    lose.start();
                    Toast.makeText(MainActivity.this, "패배 - Defeat!\nThe Computer chose Rock!", Toast.LENGTH_SHORT).show();
                    newScore = 0;
                    String total = Integer.toString(newScore);
                    scoreText.setText("Win Streak: " + total);
                    canClick = false;
                    stopInput();
                } else if (computerChoice <= 0.67) {
                    draw.start();
                    Toast.makeText(MainActivity.this, "무승부 - It was a draw!\nThe Computer chose Scissors!", Toast.LENGTH_SHORT).show();
                    canClick = false;
                    stopInput();
                } else {
                    win.start();
                    Toast.makeText(MainActivity.this, "승리 - Victory!\nThe Computer chose Paper!", Toast.LENGTH_SHORT).show();
                    newScore++;
                    String total = Integer.toString(newScore);
                    scoreText.setText("Win Streak: " + total);
                    canClick = false;
                    stopInput();
                }

                if (newScore > oldHighScore) {
                    SharedPreferences.Editor edit = prefs.edit();
                    edit.putInt("key", newScore);
                    edit.commit();
                    oldHighScore = prefs.getInt(key, 0);
                    String highScoreTotal = Integer.toString(oldHighScore);
                    highScoreText.setText("HIGH SCORE: " + highScoreTotal);
                }

            } else {
                stopInput();
            }
        }
    });

    paper.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            //mp3.start();
            double computerChoice = Math.random();
            if (canClick) {
                if (computerChoice < 0.34) {
                    win.start();
                    Toast.makeText(MainActivity.this, "승리 - Victory!\nThe Computer chose Rock!", Toast.LENGTH_SHORT).show();
                    newScore++;
                    String total = Integer.toString(newScore);
                    scoreText.setText("Win Streak: " + total);
                    canClick = false;
                    stopInput();
               } else if (computerChoice <= 0.67) {
                    lose.start();
                    Toast.makeText(MainActivity.this, "패배 - Defeat!\nThe Computer chose Scissors!", Toast.LENGTH_SHORT).show();
                    newScore = 0;
                    String total = Integer.toString(newScore);
                    scoreText.setText("Win Streak: " + total);
                    canClick = false;
                    stopInput();
                } else {
                    draw.start();
                    Toast.makeText(MainActivity.this, "무승부 - It was a draw!\nThe Computer chose Paper!", Toast.LENGTH_SHORT).show();
                    canClick = false;
                    stopInput();
                }

                if (newScore > oldHighScore) {
                    SharedPreferences.Editor edit = prefs.edit();
                    edit.putInt("key", newScore);
                    edit.commit();
                    oldHighScore = prefs.getInt(key, 0);
                    String highScoreTotal = Integer.toString(oldHighScore);
                    highScoreText.setText("HIGH SCORE: " + highScoreTotal);
                }

            } else {
                stopInput();
            }
        }
    });
}

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    public boolean stopInput() {
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                canClick = true;
            }
        }, 2000);
        return true;
    }


    @Override
    protected void onResume() {
        super.onResume();
        final SharedPreferences prefs = this.getSharedPreferences("myPrefsKey", Context.MODE_PRIVATE);
        oldHighScore = prefs.getInt(key, 0);
        String highScoreTotal = Integer.toString(oldHighScore);
        highScoreText.setText("HIGH SCORE: " + highScoreTotal);
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
